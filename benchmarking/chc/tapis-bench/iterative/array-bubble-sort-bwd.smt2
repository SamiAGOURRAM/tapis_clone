(set-logic HORN)
(declare-fun !inv0 (Int (Array Int Int) Bool ) Bool)
(declare-fun !inv1 (Int (Array Int Int) Bool Int ) Bool)
(assert (forall ((N@0 Int)(swapped@0 Bool)(array@0 (Array Int Int))) (=> (and (> |N@0| 0) (= |swapped@0| true)) (!inv0 |N@0| |array@0| |swapped@0|))))
(assert (forall ((N@0 Int)(array@0 (Array Int Int))(swapped@0 Bool)(swapped@1 Bool)(j@0 Int)) (=> (and (!inv0 |N@0| |array@0| |swapped@0|) |swapped@0| (= |swapped@1| false) (= |j@0| (- |N@0| 2))) (!inv1 |N@0| |array@0| |swapped@1| |j@0|))))
(assert (forall ((N@0 Int)(array@0 (Array Int Int))(swapped@0 Bool)(j@0 Int)) (=> (and (not (>= |j@0| 0)) (!inv1 |N@0| |array@0| |swapped@0| |j@0|)) (!inv0 |N@0| |array@0| |swapped@0|))))
(assert (forall ((N@0 Int)(array@0 (Array Int Int))(swapped@0 Bool)) (=> (and (!inv0 |N@0| |array@0| |swapped@0|) (not |swapped@0|) (not (forall ((k@0 Int)(l@0 Int)) (=> (and (<= 0 |k@0|) (< |k@0| (- |N@0| 1))) (=> (and (<= (+ |k@0| 1) |l@0|) (< |l@0| |N@0|)) (<= (select |array@0| |k@0|) (select |array@0| |l@0|))))))) false)))
(assert (forall ((N@0 Int)(array@0 (Array Int Int))(swapped@0 Bool)(j@0 Int)(j@1 Int)(tmp@0 Int)(swapped@1 Bool)(array@1 (Array Int Int))(array@2 (Array Int Int))) (=> (and (!inv1 |N@0| |array@1| |swapped@1| |j@0|) (= |j@1| (- |j@0| 1)) (>= |j@0| 0) (> (select |array@1| |j@0|) (select |array@1| (+ |j@0| 1))) (= |tmp@0| (select |array@1| |j@0|)) (= |array@2| (store |array@1| |j@0| (select |array@1| (+ |j@0| 1)))) (= |array@0| (store |array@2| (+ |j@0| 1) |tmp@0|)) (= |swapped@0| true)) (!inv1 |N@0| |array@0| |swapped@0| |j@1|))))
(assert (forall ((N@0 Int)(array@0 (Array Int Int))(swapped@0 Bool)(j@0 Int)(j@1 Int)) (=> (and (!inv1 |N@0| |array@0| |swapped@0| |j@0|) (= |j@1| (- |j@0| 1)) (>= |j@0| 0) (not (> (select |array@0| |j@0|) (select |array@0| (+ |j@0| 1))))) (!inv1 |N@0| |array@0| |swapped@0| |j@1|))))
(check-sat)