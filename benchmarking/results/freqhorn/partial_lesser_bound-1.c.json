{"name": "partial_lesser_bound-1.c", "tool": "freqhorn", "times": [[0.35, "Success after bootstrapping\n(define-fun !inv0 ((_FH_0 Int)(_FH_1 (Array Int Int))(_FH_2 Int)) Bool\n  (and (> _FH_0 0) (>= _FH_2 0) (forall ((_FH_arr_it_0 Int)) (=> (and (>= _FH_arr_it_0 0) (< (+ _FH_arr_it_0 (- _FH_0)) 0) (< (+ _FH_arr_it_0 (- _FH_2)) 0)) (>= (* (- 1) (select _FH_1 _FH_arr_it_0)) 0))) (forall ((_FH_arr_it_0 Int)) (=> (and (>= _FH_arr_it_0 0) (< (+ _FH_arr_it_0 (- _FH_0)) 0) (< (+ _FH_arr_it_0 (- _FH_2)) 0)) (>= (select _FH_1 _FH_arr_it_0) 0)))))\n(define-fun !inv1 ((_FH_0 Int)(_FH_1 (Array Int Int))(_FH_2 Int)(_FH_3 Int)) Bool\n  (and (> _FH_0 0) (>= _FH_3 0) (forall ((_FH_arr_it_1 Int)) (=> (and (>= _FH_arr_it_1 0) (< (+ (- _FH_0) _FH_arr_it_1) 0) (>= (+ _FH_arr_it_1 (- _FH_3)) 0)) (>= (* (- 1) (select _FH_1 _FH_arr_it_1)) 0))) (forall ((_FH_arr_it_0 Int)) (=> (and (>= _FH_arr_it_0 0) (< (+ _FH_arr_it_0 (- _FH_0)) 0)) (>= (select _FH_1 _FH_arr_it_0) 0))) (forall ((_FH_arr_it_1 Int)) (=> (and (>= _FH_arr_it_1 0) (< (+ (- (div _FH_0 2)) _FH_arr_it_1) 0) (< (+ _FH_arr_it_1 (- _FH_3)) 0)) (>= (* (- 1) (select _FH_1 _FH_arr_it_1)) (- 10)))) (forall ((_FH_arr_it_1 Int)) (=> (and (>= _FH_arr_it_1 0) (< (+ (- (div _FH_0 2)) _FH_arr_it_1) 0) (< (+ _FH_arr_it_1 (- _FH_3)) 0)) (>= (select _FH_1 _FH_arr_it_1) 10)))))"], [0.34, "Success after bootstrapping\n(define-fun !inv0 ((_FH_0 Int)(_FH_1 (Array Int Int))(_FH_2 Int)) Bool\n  (and (> _FH_0 0) (>= _FH_2 0) (forall ((_FH_arr_it_0 Int)) (=> (and (>= _FH_arr_it_0 0) (< (+ _FH_arr_it_0 (- _FH_0)) 0) (< (+ _FH_arr_it_0 (- _FH_2)) 0)) (>= (* (- 1) (select _FH_1 _FH_arr_it_0)) 0))) (forall ((_FH_arr_it_0 Int)) (=> (and (>= _FH_arr_it_0 0) (< (+ _FH_arr_it_0 (- _FH_0)) 0) (< (+ _FH_arr_it_0 (- _FH_2)) 0)) (>= (select _FH_1 _FH_arr_it_0) 0)))))\n(define-fun !inv1 ((_FH_0 Int)(_FH_1 (Array Int Int))(_FH_2 Int)(_FH_3 Int)) Bool\n  (and (> _FH_0 0) (>= _FH_3 0) (forall ((_FH_arr_it_1 Int)) (=> (and (>= _FH_arr_it_1 0) (< (+ (- _FH_0) _FH_arr_it_1) 0) (>= (+ _FH_arr_it_1 (- _FH_3)) 0)) (>= (* (- 1) (select _FH_1 _FH_arr_it_1)) 0))) (forall ((_FH_arr_it_0 Int)) (=> (and (>= _FH_arr_it_0 0) (< (+ _FH_arr_it_0 (- _FH_0)) 0)) (>= (select _FH_1 _FH_arr_it_0) 0))) (forall ((_FH_arr_it_1 Int)) (=> (and (>= _FH_arr_it_1 0) (< (+ (- (div _FH_0 2)) _FH_arr_it_1) 0) (< (+ _FH_arr_it_1 (- _FH_3)) 0)) (>= (* (- 1) (select _FH_1 _FH_arr_it_1)) (- 10)))) (forall ((_FH_arr_it_1 Int)) (=> (and (>= _FH_arr_it_1 0) (< (+ (- (div _FH_0 2)) _FH_arr_it_1) 0) (< (+ _FH_arr_it_1 (- _FH_3)) 0)) (>= (select _FH_1 _FH_arr_it_1) 10)))))"], [0.34, "Success after bootstrapping\n(define-fun !inv0 ((_FH_0 Int)(_FH_1 (Array Int Int))(_FH_2 Int)) Bool\n  (and (> _FH_0 0) (>= _FH_2 0) (forall ((_FH_arr_it_0 Int)) (=> (and (>= _FH_arr_it_0 0) (< (+ _FH_arr_it_0 (- _FH_0)) 0) (< (+ _FH_arr_it_0 (- _FH_2)) 0)) (>= (* (- 1) (select _FH_1 _FH_arr_it_0)) 0))) (forall ((_FH_arr_it_0 Int)) (=> (and (>= _FH_arr_it_0 0) (< (+ _FH_arr_it_0 (- _FH_0)) 0) (< (+ _FH_arr_it_0 (- _FH_2)) 0)) (>= (select _FH_1 _FH_arr_it_0) 0)))))\n(define-fun !inv1 ((_FH_0 Int)(_FH_1 (Array Int Int))(_FH_2 Int)(_FH_3 Int)) Bool\n  (and (> _FH_0 0) (>= _FH_3 0) (forall ((_FH_arr_it_1 Int)) (=> (and (>= _FH_arr_it_1 0) (< (+ (- _FH_0) _FH_arr_it_1) 0) (>= (+ _FH_arr_it_1 (- _FH_3)) 0)) (>= (* (- 1) (select _FH_1 _FH_arr_it_1)) 0))) (forall ((_FH_arr_it_0 Int)) (=> (and (>= _FH_arr_it_0 0) (< (+ _FH_arr_it_0 (- _FH_0)) 0)) (>= (select _FH_1 _FH_arr_it_0) 0))) (forall ((_FH_arr_it_1 Int)) (=> (and (>= _FH_arr_it_1 0) (< (+ (- (div _FH_0 2)) _FH_arr_it_1) 0) (< (+ _FH_arr_it_1 (- _FH_3)) 0)) (>= (* (- 1) (select _FH_1 _FH_arr_it_1)) (- 10)))) (forall ((_FH_arr_it_1 Int)) (=> (and (>= _FH_arr_it_1 0) (< (+ (- (div _FH_0 2)) _FH_arr_it_1) 0) (< (+ _FH_arr_it_1 (- _FH_3)) 0)) (>= (select _FH_1 _FH_arr_it_1) 10)))))"]]}